<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC5944 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5944.xml">

<!ENTITY I-D.ni-core SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.farrell-decade-ni.xml">
<!ENTITY I-D.ni-params SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.hallambaker-decade-ni-params.xml">

]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="no" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<?rfc comments="no"?>
<?rfc inline="no"?>
<rfc category="std" docName="draft-kutscher-icnrg-challenges-00" ipr="trust200902"
     submissionType="independent">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="ICN Challenges">ICN Research Challenges</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Dirk Kutscher" initials="D." surname="Kutscher" role="editor">
      <organization>NEC</organization>

      <address>
        <postal>
          <street>Kurfuersten-Anlage 36</street>

          <!-- Reorder these if your country does things differently -->

          <city>Heidelberg</city>

          <region></region>

          <code></code>

          <country>Germany</country>
        </postal>

        <phone></phone>

        <email>kutscher@neclab.eu</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Suyong Eum" initials="S." surname="Eum">
      <organization abbrev="NICT">National Institute of Information and Communications Technology</organization>
      <address>
	<postal>
	  <street>4-2-1, Nukui Kitamachi, Koganei</street>
	  <city>Tokyo</city>
	  <code>184-8795</code>
	  <country>Japan</country>
	</postal>
	<phone>+81-42-327-6582</phone>
	<email>suyong@nict.go.jp</email>
      </address>
    </author>


    <author fullname="Kostas Pentikousis" initials="K." surname="Pentikousis">
      <organization abbrev="Huawei">Huawei Technologies</organization>
      <address>
	<postal>
	  <street>Carnotstrasse 4</street>
	  <city>Berlin</city>
	  <code>10587</code>
	  <country>Germany</country>
	</postal>
	<email>k.pentikousis@huawei.com</email>
      </address>
    </author>

    <author fullname="Ioannis Psaras" initials="I." surname="Psaras">
      <organization abbrev="UCL">University College London, Dept. of
      E.E. Eng.</organization>
      <address>
	<postal>
	  <street>Torrington Place</street>
	  <city>London</city>
	  <code>WC1E 7JE</code>
	  <country>United Kingdom</country>
	</postal>
	<email>i.psaras@ucl.ac.uk</email>
      </address>
    </author>


    <author fullname="Daniel Corujo" initials="D." surname="Corujo">
      <organization>Universidade de Aveiro</organization>
      <address>
	<postal>
	  <street>Instituto de Telecomunicacoes, Campus Universitario de Santiago</street>
	  <city>Aveiro</city>
	  <code>P-3810-193</code>
	  <country>Portugal</country>
	</postal>
	<email>dcorujo@av.it.pt</email>
      </address>
    </author>


    <author fullname="Damien Saucez" initials="D." surname="Saucez">
      <organization>INRIA</organization>
      <address>
	<email>damien.saucez@inria.fr</email>
      </address>
    </author>











    <date day="10" month="February" year="2013" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>IETF</area>

    <workgroup>Network Working Group</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->


    <keyword>Information centric networking</keyword>


    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>
	This memo describes research challenges for
	Information-Centric Networking. Information-centric networking
	is an approach to evolve the Internet infrastructure to
	directly support this use by introducing uniquely named data
	as a core Internet principle.  Data becomes independent from
	location, application, storage, and means of transportation,
	enabling in-network caching and replication. Challenges
	include naming, security, routing, system scalability,
	mobility management, wireless networking, transport services,
	in-network caching, and network management.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
	Distributing and manipulating named information is a major
	application in the Internet today. In addition to web-based
	content distribution, other distribution technologies (such as
	P2P and CDN) have emerged and are promoting a communication
	model of accessing data by name, regardless of origin server
	location.
      </t>
      <t>
	In order to respond to increasing traffic volume in the
	current Internet for applications such as mobile video and
	cloud computing, a set of disparate technologies and
	distribution services are applied that employ caching,
	replication and content distribution in different specific
	ways. These approaches are currently deployed in separate
	silos -- different CDN providers and P2P applications rely on
	specific distribution technologies. It is not possible to
	uniquely and securely identify named information independently
	of the distribution channel; and the different distribution
	approaches are typically implemented as an overlay,
	potentially leading to unnecessary inefficiency.
      </t>
      <t>
	For example, creating and sharing multimedia content in a
	social networking application today, typically requires
	uploading data objects to centralized service provider
	platforms, from where it can be accessed individually by other
	users. Even if content sharing is intended to happen locally,
	e.g., in a local network or local area, the actual
	communication will require interactions from any interested
	user with the service provider. CDNs can alleviate the
	situation only partly, because, due to organizational and
	economic reasons, it is not common to deploy CDN gear
	ubiquitously. Moreover, since CDNs and the HTTP communication
	sessions form overlays, the actual communication, i.e., the
	requests for named content and the actual responses, are
	largely invisible to the network, i.e., it is not easily
	possible to optimize efficiency and performance. For example
	in a wireless access network, it is not possible to leverage
	inherent broadcast functionality (to avoid duplicate
	transmission of the same content) due to limitations from
	point-to-point and overlay communication.
      </t>
      <t>
	Information-centric networking (ICN) is an approach to evolve
	the Internet infrastructure to directly support this use by
	introducing uniquely named data as a core Internet
	principle. Data becomes independent from location,
	application, storage, and means of transportation, enabling
	in-network caching and replication. The expected benefits are
	improved efficiency, better support for provenance
	verification and name-content binding validation, better
	scalability with respect to information/bandwidth demand and
	better robustness in challenging communication scenarios.
      </t>
      <t>
	ICN concepts can be applied to different layers of the
	protocol stack: name-based data access can be implemented on
	top of the existing IP infrastructure, e.g., by providing
	resource naming, ubiquitous caching and corresponding
	transport services, or it can be seen as a packet-level
	internetworking technology that would cause fundamental
	changes to Internet routing and forwarding. In summary, ICN is
	expected to evolve the Internet architecture at different
	layers.
      </t>
      <t>
	This document describes research challenges for ICN that need
	to be addressed in order to achieve these goals. The objective
	of this document is to document these challenges and
	corresponding current approaches and to expose requirements
	that should be addressed by future research work.
      </t>

    </section>

    <section title="Problems with Information Distribution Today">
      <t>
	The best current practice to manage this growth in terms of
	data volume and devices is to employ application-layer
	overlays such as CDNs, P2P applications, and M2M application
	platforms that cache content, provide location-independent
	access to data, and optimize its delivery. In principle, such
	platforms provide a service model of accessing named data
	objects (NDOs) (replicated web resources, M2M data in data
	centers) instead of a host-to-host packet delivery service
	model. However, since this functionality resides in overlays
	only, the full potential of content distribution and M2M
	application platforms cannot be leveraged as the network is
	not aware of data requests and data transmissions, leading to:
	<list style="symbols">
	  <t>data having to travel sub-optimal routes depending on the
	  overlay, and not the Internet layer, topology;</t>
	  <t>multicast and broadcast features of wireless networks
	  cannot be leveraged, i.e., request and delivery for the same
	  object have to be made multiple times;</t>
	  <t>overlays typically require a significant amount of
	  infrastructure support, e.g., authentication portals,
	  content storage, and applications servers, making it often
	  impossible to establish local, direct communication;</t>
	  <t>
	    the network not being aware of the nature of data objects
	    and thus being unable to manage access and transmission
	    (without layer violations);
	  </t>
	  <t>
	    provenance validation uses host authentication today, so
	    that even if there are locally cached copies available, it
	    is normally not easily possible to validate their
	    authenticity; and
	  </t>
	  <t>
	    many applications providing their own approach to caching,
	    replication, transport, authenticity validation (if at
	    all), although they all share similar models of accessing
	    named data objects in the network.
	  </t>
	</list>
      </t>
    </section>
    <section title="ICN Concepts">
      <t>
	Fundamentally, ICN is providing access to named data as a
	first-order network service, i.e., the network is able to
	serve requests to named data natively. That means, network
	nodes can receive requests for named data and act on it, for
	example by forwarding the request to a suitable
	next-hop. Consequently, the network processes requests for
	named data objects  (and corresponding responses)
	natively, i.e., it can see requests and responses. Every
	network nodes on a path is enabled to perform forwarding
	decisions, to cache objects etc.  This enables the network to
	forward such requests on optimal paths, employing optimal
	transmission technologies at every node, e.g.,
	broadcast/multicast transmission in wireless networks to avoid
	duplicate transmission of both requests and responses.
      </t>
      <t>
	In ICN, like in the Internet Protocol, there is a set of
	common concepts and node requirements beyond this basic
	service model. Naming data objects is a key concept. In
	general, ICN names do not represent neither network nodes nor
	interfaces -- they represent NDOs independent of their
	location. Names are the keys for forwarding decisions -- and
	they are used for matching requests to responses: In order to
	provide better support for accessing copies of NDOs regardless
	of their location, it is important to be able to validate that
	a response actually delivers the bits that correspond to an
	original request for named data. Name-content binding
	validation is a fundamental security service in ICN, and this
	is often achieved by establishing a verifiable binding between
	the object name and the actual object or an identity that has
	created the object. ICN can support other security services,
	such as provenance validation, encryption -- depending on the
	details of naming schemes, object models and assumptions on
	infrastructure support. Security services such as name-content
	binding validation are available to any node, i.e., not just
	the actual receivers. This is an important feature, for
	enabling ingress gateways to check object authenticity to
	prevent denial-of-service attacks.
      </t>
      <t>
	Based on these fundamental properties it is possible to
	leverage network storage ubiquitously: every node and every
	device can cache data objects and respond to requests for such
	objects -- it is not required to validate the authenticity of
	the node itself since name-content bindings can be
	validated. Ubiquitous in-network storage can be used for
	different purposes: it can enable sharing, i.e., the same
	object copy can be delivered to multiple users/nodes as in
	today's proxy caches and CDNs. It can also be used to make
	communication more robust (and perform better) by enabling the
	network to answer requests from local caches (instead of from
	origin servers). In case of disruption (message not
	delivered), a node can re-send the request, and it could be
	answered by an on-path cache, i.e., on the other side of the
	disrupted link. The network itself would thus support
	retransmissions -- enabling shorter round-trip times and
	offloading origin servers and other parts of the network.
      </t>
      <t>
	The request/response model and ubiquitous in-network storage
	also enables new options for implementing transport services,
	i.e., reliable transmission, flow control etc. First of all, a
	request/response model can enable receiver-driven transport
	regimes, i.e., receivers (the requestors of NDOs) can control
	message sending rates by regulating the request sending rate
	(assuming that every response message has to be triggered by a
	request message). Retransmission would be achieved by
	re-sending requests, e.g., after a timeout. Because objects
	can be replicated, object transmission and transport sessions
	would not necessarily have end-to-end semantics: requests can
	be answered by caches, and a node can select one or multiple
	next-hop destination for a particular request -- depending on
	configuration, observed performance or other criteria.
      </t>
      <t>
	This receiver-driven communication model potentially enables
	new interconnection and business models: a request for named
	data can be linked to an interest of a requestor (or
	requesting network) in data from another peer, which could
	suggest modeling peering agreements and charging accordingly.
      </t>
    </section>

    <section title="ICN Research Challenges">
      <section title="Naming and Security">
	<t>
	  Naming data objects is as important for ICN as naming hosts
	  is for today's Internet. Fundamentally, ICN requires unique
	  names for individual NDOs, since names are used for
	  identifying objects independently of its location or
	  container. It is important to establish a verifiable binding
	  between the object and its name (name-data integrity ), so
	  that a receiver can be sure that received bits actually
	  represent the NDO (object authenticity). Information about
	  an object's provenance, i.e., who generated or published it,
	  is also useful to associate to the name.
	</t>
	<t>
	  The above functions are fundamentally required for the
	  information-centric network to work reliably -- otherwise
	  neither network elements nor receivers can trust objects'
	  authenticity, which would enable several attacks including
	  critical DoS attacks by injecting spoofed content into the
	  network. There are different ways to use names and
	  cryptography to achieve the desired functions <xref
	  target="ICNNAMING"/> <xref target="ICNSURVEY"/>, and there
	  are different ways to manage namespaces correspondingly.
	</t>
	<t>
	  Two naming schemes have largely been proposed: one with a
	  hierarchical and one with a flat namespace. The hierarchical
	  scheme has a structure similar to current URLs, where the
	  hierarchy is rooted in a publisher prefix. The hierarchy
	  enables aggregation of routing information, improving
	  scalability of the routing system. In some cases, the names
	  are human-readable, which makes it possible for users to
	  manually type in names, reuse, and, to some extent, mapping
	  name to a user's intent.
	</t>
	<t>
	  The other naming scheme is self-certifying, meaning that the
	  object's name-data integrity can be verified without needing
	  a public key infrastructure (PKI) or other third party to
	  first establish trust in the key. Self-certification is
	  achieved by binding the hash of the content closely to the
	  object's name. This can be done by directly embedding the
	  hash of the content in the name. Another option is an
	  indirect binding, which embeds the public key of the
	  publisher in the name and signs the hash of the content with
	  the corresponding secret key. The resulting names are
	  typically non-hierarchical, or flat, although the publisher
	  field provides structure that can be used for routing
	  aggregation.
	</t>
	<t>
	  There are design trade-offs for ICN naming affecting routing
	  and security. Self-certifying names are not human readable
	  nor hierarchical. They can however provide some structure
	  for aggregation, for instance, a name part corresponding to
	  a publisher. Without self-certification, as mentioned above,
	  the infrastructure depends on a PKI for its operation, which
	  can be impede a large-scale deployment.
	</t>
	<t>
	  Specific research challenges include:
	  <list style="symbols">
	    <t>
	      naming static data objects can be performed by using
	      content hashes as part of object names, so that
	      publishers calculate the hash over existing data objects
	      and receivers (or any ICN node) can validate the
	      name-content binding by re-calculating the hash and
	      comparing it to the name (component). <xref
	      target="I-D.farrell-decade-ni"></xref> specifies a
	      concrete naming format for this.
	    </t>
	    <t>
	      naming dynamic objects is referring to use cases where
	      the name has to be generated before the object is
	      created (for example, this could be the case for live
	      streaming, when a publisher wants to make the stream
	      available by registering stream chunk names in the
	      network). One approach to this can be self-certified
	      names as described above.
	    </t>
	    <t>
	      requestor privacy protection can be a challenge in ICN
	      as a direct consequence of the
	      accessing-named-data-objects paradigm: if the network
	      can "see" requests and responses, it can also log
	      request history for network segments or individual
	      users, which can be undesirable, especially since name
	      are typically expected to be long-lived. I.e., even if
	      the name itself does not reveal much information, the
	      assumption is that the name can be used to retrieve the
	      corresponding data objects in the future.
	    </t>
	    <t>
	      Updating and versioning NDO can be challenging because
	      it can contradict fundamental ICN assumptions: if an NDO
	      can be replicated and stored in in-network storage for
	      later retrieval, names have to be long-lived -- and the
	      name-content binding must not change: updating an object
	      (changing the content without generating a new name) is
	      impossible. Versioning can be seen as one possible
	      solution, possibly requiring a naming scheme that
	      supports versioning (and a way for requestors to learn
	      about versions).
	    </t>
	    <t>
	      Managing accessibility: whereas in ICN the general
	      assumption is to enable ubiquitous access to NDOs, there
	      can be relevant use cases where access to objects should
	      be restricted, for example to a specific user
	      group. There are different approaches for this, such as
	      object encryption (requiring key distribution and
	      related mechanisms) or the concept of scopes, e.g.,
	      based on names that can only be used/resolved under some
	      constraints.
	    </t>
	  </list>
	</t>
      </section>

      <section title="Routing and Resolution System Scalability" anchor="sec.routing">
	<t>
	  ICN routing locates a data object based on its name which is
	  initially provided by a requester. ICN routing is composed
	  of three steps: a name resolution step, a discovery step,
	  and a delivery step. The name resolution step translates the
	  name of requesting data object into its locator. The
	  discovery step routes user request to data object based on
	  its name or locator. The last delivery step routes the data
	  object back to the requester. Depending on how these steps
	  are combined, ICN routing schemes can be categorized as:
	  Route-By-Name Routing (RBNR), Lookup-By-Name Routing (LBNR),
	  and Hybrid Routing (HR).
	</t>
	<section title="Route-By-Name Routing (RBNR)">
	  <t>
	    RBNR omits the first name resolution step. The name of
	    data object is directly used to route user request to the
	    data object. Therefore, routing information to each data
	    object basically has to be maintained in the routing
	    table. Since the number of data objects is huge (The
	    number of originally published content files that ICN is
	    expected to support was estimated as 10^11 back in 2007
	    <xref target="DONA"/>. However, there are still many
	    people in ICN research community who believe that the
	    number should be larger than 10^11 , e.g. 10^15 --
	    10^22.), the size of routing table tends to be
	    proportional to the number of data object unless any
	    aggregation mechanism is introduced to the name of data
	    object. On the other hand, RBNR reduces overall latency
	    and simplifies the routing process due to the omission of
	    the resolution process. For the delivery step, RBNR needs
	    another identifier (ID) of either host or location to
	    forward the requested data object back to the
	    requester. Otherwise, an additional routing mechanism has
	    to be introduced such as bread-crumb routing <xref
	    target="BREADCRUMBS"/>: a request leaves behind a trail of
	    breadcrumbs along its forwarding path, and then the
	    response is forwarded back to the requester consuming the
	    trail. Specific challenges include:
	    <list style="symbols">
	      <t>
		How to aggregate the names of data objects to reduce
		the number of routing entries?
	      </t>
	      <t>
		How does user learn the name which is designed for
		aggregation by provider? (For example, although we
		name our contribution as "ICN research challenge",
		IRTF (provider) may want to change the name to
		"/IETF/IRTF/ ICN/Research challenge" for
		aggregation. In this case, how does a user learn the
		name "/IETF/IRTF/ICN/Research challenge" to retrieve
		the contribution initially named "ICN research
		challenge" without any resolution process?)
	      </t>
	      <t>
		Without introducing the name aggregation scheme, can
		we still achieve a scalable routing by taking
		advantage of topological structure and distributed
		copies? e.g. compact routing <xref target="COMPACT"/>,
		random walk <xref target="RANDOM"/> or Greedy routing
		<xref target="GREEDY"/>, etc.
	      </t>
	      <t>
		How to incorporate copies of a data object in
		in-network caches in this routing scheme?
	      </t>
	    </list>
	  </t>
	</section>
	<section title="Lookup-By-Name Routing (LBNR)">
	  <t>
	    LBNR uses the first name resolution step to translate the
	    name of requesting data object into its locator. Then, the
	    second discovery step is carried out based on the
	    locator. Since IP address could be used as locators, the
	    discovery step can depend on the current IP
	    infrastructure. The delivery step can be implemented same
	    as IP routing. The locator of requester is included in the
	    request message, and then the requested data object is
	    delivered to the requester based on the locator. Specific
	    challenges include:
	    <list style="symbols">
	      <t>How to build a scalable resolution system which provides
	      <list style="symbols">
		<t>
		  Fast lookup: mapping the name of data object to its
		  locators (copies as well).
		</t>
		<t>
		  Fast update: the location of data object is expected
		  to change frequently. Also, multiple data objects
		  may change their locations at the same time,
		  e.g. data objects in laptop.
		</t>
	      </list>
	      </t>
	      <t>
		How to incorporate copies of a data object in
		in-network caches in this routing scheme?
	      </t>
	    </list>
	  </t>
	</section>
	<section title="Hybrid Routing (HR)">
	  <t>
	    HR combines both RBNR and LBNR to benefit from their
	    advantages. For instance, within a single administrative
	    domain, e.g. ISP where scalability issue is not serious
	    problem, RBNR can be adopted to reduce overall latency by
	    omitting the resolution process. On the other hand, LBNR
	    can be used to route among the domains which have their
	    own prefix (locator). A specific challenge here is:
	    <list style="symbols">
	      <t>
		How to design a scalable mapping system, which given
		the name of data object, it should return a
		destination domain locator so that a user request can
		be encapsulated and forwarded to the domain?
	      </t>
	    </list>
	  </t>
	</section>
      </section>

      <section title="Mobility Management">
<!-- OLD
	<t>
	  IP was not designed to consider node mobility originally. In
	  this way, whenever you changed your point of attachment to
	  the network, a new connection procedure followed by an IP
	  address request and configuration was mandatory, and made
	  sure that connections towards content sources needed to be
	  updated. With the proliferation of mobile terminals equipped
	  with different kinds of access technologies, mobility became
	  a highly sought solution to be available at the network
	  layer. WIth this in mind, solutions were berthed, such as
	  Mobile IP [MIP], to tackle the required add-ins to the
	  Internet Protocol, in order to support IP address
	  mobility. With the necessary new network entities, new
	  signaling messages and resulting tunneling that also impacts
	  other mechanisms (e.g., security, access control), that
	  protocol, and all the extensions that were originated by it,
	  provide a clear illustration of how complex a solution needs
	  to be, for overcoming the Internet shortness on intrinsic
	  mobility-enhanced mechanisms. In that sense, novel
	  content-centric network architectures that go beyond
	  host-based mobility control, provide the ample grounds for
	  the definition of operating mechanisms considering mobility
	  as a prime requirement, right at the start.
	</t>
-->
	<t>
	  IP was not designed to consider node mobility originally,
	  forcing new connections towards the content sources to be
	  made. With the proliferation of mobile terminals equipped
	  with different kinds of access technologies, mobility became
	  a highly sought solution to be available at the network
	  layer, berthing Mobile IP <xref target="RFC5944"></xref>
	  based protocols. However, this addition also placed a higher
	  degree of complexity on the network operations due to the
	  need for new network entities, new signaling messages and
	  resulting side-mechanisms, such as tunneling. In that sense,
	  novel content-centric network architectures that go beyond
	  host-based mobility control, provide the ample grounds for
	  the definition of operating mechanisms considering mobility
	  as a prime requirement, right at the start.
	</t>
<!-- OLD
	<t>
	  ICN naming for reaching content intrinsically supports
	  mobility. For example, [NDN] does not share the IP
	  restriction of forwarding on spanning trees, so it is able
	  to take advantage of multiple interfaces or adapt to the
	  changes produced by rapid mobility (i.e., there is no need
	  to bind a layer 3 address into a layer 2 address). However,
	  if the tools available to nodes that engage in mobility
	  resume themselves to just sending a new content request from
	  the new location, then new requirements readily araise
	  regarding the support for seamless mobility, especially in
	  cases such as realtime voice/video communications. These
	  requirements are further exacerbated when mobile nodes are
	  able to connect through wireless access interfaces of
	  different technologies, where the performance and link
	  conditions can vary widely depending of numerous
	  factors. Conversely, new multimedia usage trends can also
	  provide further complex scenarios, with the video sources
	  themselves becoming mobile (e.g., live-cast of a video
	  through a social network).
	</t>
-->
	<t>
	  ICN naming for reaching content intrinsically supports
	  mobility. For example, CCN <xref target="CCN"/> does not
	  share the IP restriction of forwarding on spanning trees, so
	  it is able to take advantage of multiple interfaces or adapt
	  to the changes produced by rapid mobility (i.e., there is no
	  need to bind a layer 3 address into a layer 2 address). In
	  fact, client mobility is simplified by allowing requests for
	  new content to normally flow from different interfaces, or
	  through newly connected points of attachment to the
	  network. However, that simplicity may not be reflected when
	  the node moving is the content source, requiring more
	  complex support from the networking mechanisms in respect to
	  different aspects, such as forwarding update and caching
	  rebuilding. Furthermore, requirements become more stringent
	  when support for seamless mobility is required, especially
	  in cases such as real-time voice/video communications. These
	  requirements are further exacerbated when mobile nodes are
	  able to connect through wireless access interfaces of
	  different technologies, where the performance and link
	  conditions can vary widely depending of numerous factors.

	</t>
	<t>
	  Here mobility management has an important role in terms of
	  not only optimizing the handover process, but also to
	  ideally ensure seamless transition from one point of
	  attachment to the other. In this way, "seamless transition"
	  ensures that the content reception by the user occurs in an
	  unperceptive way to the user and/or application receiving
	  that content. Moreover, this transition needs to be executed
	  in parallel with ICN content identification and reaching
	  mechanisms enabling scenarios, such as, preparation of the
	  content reaching process at the target connectivity point,
	  prior to the handover (to reduce link switch
	  disturbances). Finally, these mobility aspects can also be
	  tightly coupled with network management aspects, in respect
	  to policy enforcement, link control and other parameters
	  necessary for establishing the node's link to the
	  network. The resulting mobility management process can thus
	  enhance and evolve ICN aspects by making them aware (or able
	  to contribute) to not only allow but also enhance possible
	  mobility procedures.
	</t>
	<t>
	  From this, a set of research challenges on ICN Mobility
	  Management can be derived:
	  <list style="symbols">
	    <t>
	      How can content reaching mechanisms interface with
	      specific link operations, such as identifying which
	      links are available for a certain content
	    </t>
	    <t>
	      How to make mobility as a service that is only activated
	      when the specific user/content/conditions require it
	      (i.e., a possible solution to maintain the
	      mobility-agnostic aspect of generic ICN)
	    </t>
	    <t>
	      How to coordinate mobility management between the node
	      and the network for optimization and policing
	      procedures?
	    </t>
	  </list>
	</t>
      </section>

      <section title="Wireless Networking">
	<t>
	  Today, all wireless network/radio access technologies (L2)
	  are developed with a clear assumption in mind: the waist of
	  the protocol stack is (and will be) IP. This translates into
	  answering a large set of questions, from how to handle
	  broadcast to how to support multicast in a rather
	  straightforward manner. Arguably, if one designs a future
	  wireless access technology with an information-centric
	  "layer 3", most of these answers would no longer be
	  valid. Although this is clearly outside the scope of this
	  document, a few research challenges that the wider community
	  may be interested in include:
	  <list style="symbols">
	    <t>
	      In the context of wireless access, how can we leverage
	      the broadcast nature of the medium in an
	      information-centric network?
	    </t>
	    <t>
	      Is it possible that by changing the network paradigm to
	      ICN we can in practice increase the spectral efficiency
	      (bits/s/Hz) of a wireless network beyond what would be
	      possible with today's host-centric approaches?
	    </t>
	    <t>
	      How can a conversational service be supported at least
	      as efficiently as today's SoA wireless network deliver?
	    </t>
	  </list>
	</t>
      </section>
      
      <section title="Transport Services">
	<t>
	  ICN's receiver-driven communication model as described above
	  creates new option for transport protocol design -- it does
	  not rely on end-to-end communication path from a sender to a
	  receiver, because a requested object can be accessible in
	  multiple different network locations. A node can thus decide
	  how to utilize multiple sources, e.g., by sending parallel
	  requests for the same object or by switching sources (or
	  next hops) in a suitable schedule for a series of requests.
	</t>
	<t>
	  In this model the requestor would control data rate by
	  regulating its request sending rate and next by performing
	  source/next-hop selections. Specific challenges are
	  depending on the specific ICN approach in use, but general
	  challenges for receiver-driven transport protocols (or
	  mechanisms, since dedicated protocols might not be required)
	  include flow and congestion control, fairness, network
	  utilization, stability (of data rates under stable
	  conditions) etc. <xref target="HRICP"/> describes a sample
	  request rate control protocol and corresponding design
	  challenges.
	</t>
	<t>
	  ICN offers routers the possibility to aggregate requests and
	  can use several paths, meaning that there is no such thing
	  as end-to-end communication path, e.g., a router that
	  receives two requests for the same content at the same time
	  only sends one requests to its neighbor. The aggregation of
	  requests has a general impact on transport service
	  design.
	</t>
	<t>
	  Achieving fairness for requestors can be one challenge as it
	  is not possible to identify the number of clients behind one
	  particular request.  A second problem related to request
	  aggregation is the management of request retransmissions.
	  Generally, it is assumed that a router will not transmit a
	  request if it transmitted an identical request recently and
	  because there is no information about the requester, the
	  router cannot distinguish the initial request form a client
	  from a retransmission from the same client.  In such a
	  situation, how routers can adapt their timers to use the
	  best of the communication paths.  Finally, aggregation of
	  requests has an impact on the server (producer) side. This
	  last has no way to determine the number of clients actually
	  consuming the content it is producing. This shift of model
	  influence the business model of the server, e.g., how to
	  implement pay-per-click?
	</t>

      </section>

      <section title="In-Network Caching">
	<t>
	  Explicitly named content objects allow for caching in
	  virtually any network element, including routers, proxy
	  caches and end-host machines. In-network caching can
	  therefore improve network performance by fetching content
	  from nodes geographically placed closer to the
	  end-user. Several issues that need further investigation
	  have been identified with respect to in-network
	  caching. Here we list some of the most important challenges
	  that relate to the properties of the new ubiquitous caching
	  system.
	</t>
	<section title="Cache Placement">
	  <t>
	    The declining cost of fast memory gives the opportunity to
	    deploy caches in network routers and take advantage of
	    explicitly named cached contents. There exist two
	    approaches to in-network caching, namely on-path and
	    off-path caching. Both approaches have to consider the
	    issue of cache location. Off-path caching is similar to
	    traditional proxy-caching, or CDN server
	    placement. Retrieval of contents from off-path caches
	    requires redirection of requests and therefore, is closely
	    related to the Request-to-Cache Routing problem discussed
	    below. Off-path caches have to be placed in strategic
	    points within a network in order to reduce the redirection
	    delays and the number of detour hops to retrieve cached
	    contents. Previous research on proxy-caching and CDN
	    deployment is helpful in this case.
	  </t>
	  <t>
	    On the other hand, on-path caching requires less network
	    intervention and fits more neatly in an
	    information-/content-centric network. However, on-path
	    caching requires line-speed operation, a fact that places
	    more constraints on the design and operation of in-network
	    caching elements. Furthermore, the gain of such a system
	    of on-path in-network caches relies on
	    opportunistic/accidental cache hits and has therefore been
	    considered of limited benefit, given the huge amount of
	    contents hosted in the Internet. For this reason, network
	    operators might initially consider only a limited number
	    of network elements to be upgraded to in-network caching
	    elements. The decision on which nodes should be equipped
	    with caches is an open issue and might be based, among
	    others, on topological criteria, or traffic
	    characteristics. These challenges relate to both the
	    Content Placement Problem and the Request-to-Cache Routing
	    Problem discussed next.
	  </t>
	</section>
	<section title="Content Placement -- Content-to-Cache Distribution">
	  <t>
	    Given a number of (on-path or off-path) in-network caching
	    elements, content-to-cache distribution will affect both
	    the dynamics of the system, in terms of request
	    redirections (mainly in case of off-path caches) and the
	    gain of the system in terms of cache hits. A
	    straightforward approach to content placement is on-path
	    placement of contents as they travel from source to
	    destination. This approach reduces the computation and
	    communication overhead of placing contents within the
	    network, but on the other hand might reduce the chances of
	    hitting cached contents. This relates to the
	    Request-to-Cache Routing problem discussed next.
	  </t>
	  <t>
	    Furthermore, the number of replicas held in the system
	    brings up resource management issues in terms of cache
	    allocation. For example, continuously replicating content
	    objects in all network elements results in redundant
	    copies of the same objects. The issue of redundant
	    replication has been investigated in the past for
	    hierarchical web-caches. However, in hierarchical
	    web-caching, overlay systems co-ordination between the
	    data and the control plane can guarantee increased
	    performance in terms of cache hits. Line-speed, on-path
	    in-network caching poses different requirements and
	    therefore, new techniques need to be investigated. In this
	    direction, there already exist some studies that attempt
	    to reduce redundancy of cached copies. However, the issue
	    of coordinated content placement in on-path caches still
	    remains open.
	  </t>
	  <t>
	    The Content-to-Cache Allocation problem relates also to
	    the characteristics of the content to be cached. Popular
	    content might need to be put in places where it is going
	    to be requested next. Furthermore, issues of "expected
	    content popularity" might need to be considered in order
	    for some contents to be given priority (e.g., popular
	    content vs. one-timers). The criteria as to which contents
	    should be given priority in in-network content caches
	    relate also to the business relationships between content
	    providers and network operators. Such issues need to be
	    investigated and relate also to the evaluation methodology
	    discussed later on.
	  </t>
	</section>
	<section title="Request-to-Cache Routing">
	  <t>
	    In order to get advantage of cached contents, requests
	    have to be forwarded to the nodes that temporarily host
	    (cache) the corresponding contents. This challenge relates
	    to name-based routing, discussed before. Requests should
	    ideally follow the path to the cached content. However,
	    instructions as to which content is cached where cannot be
	    broadcast throughout the network. Therefore, the knowledge
	    of a content's location at the time of the request might
	    either not exist, or it might not be accurate (i.e.,
	    contents might have been removed by the time a request is
	    redirected to a specific node).
	  </t>
	  <t>
	    Co-ordination between the data and the control planes to
	    update information of cached contents has been considered,
	    but in this case scalability issues arise. We therefore,
	    have two options. We either have to rely on opportunistic
	    caching, where requests are forwarded to a server and in
	    case the content they are looking for is found on the
	    path, then content is fetched from this node (instead of
	    the original server), or we employ cache-aware routing
	    techniques. Cache-aware routing can either involve both
	    the control and the data plane, or only one of
	    them. Furthermore, cache-aware routing can be done in a
	    domain-wide scale or can involve more than one individual
	    AS. In the latter case, business relationships between
	    ASes might need to be exploited in order to build a
	    scalable model.
	  </t>
	</section>
      </section>

      <section title="Network Management">
	<t>
	  Managing networks has been a core craft in the IP-based
	  host-centric paradigm ever since the technology was
	  introduced in production networks. However, at the onset of
	  IP, management was considered primarily as an
	  add-on. Essential tools that are used daily by networkers,
	  such as ping and traceroute, did not become widely available
	  until more than a decade or so after IP was first
	  introduced. Management protocols, such as SNMP, also became
	  available much later than the original introduction of IP
	  and many still consider them insufficient despite the years
	  of experience we have running host-centric networks. Today,
	  when new networks are deployed network management is
	  considered a key aspect for any operator, a major challenge
	  which is directly reflected in higher OPEX if not done well.
	  If we want ICN to be deployed in infrastructure networks,
	  development of management tools and mechanisms must go
	  hand-in with the rest of the architecture design.
	</t>
	<t>
	  Although defining FCAPS for ICN is clearly outside the scope
	  of this document, there is a need for creating basic tools
	  early on while ICN is still in the design and
	  experimentation phases that can evolve over time and help
	  network operations centers (NOC) to define policies,
	  validate that they are indeed used in practice, be notified
	  early on about failures, determine and resolve configuration
	  problems. AAA as well as performance management, from a NOC
	  perspective, will also need to be considered. Given the
	  expectations for a large number of nodes and unprecedented
	  traffic volumes, automating tasks, or even better employing
	  self-management mechanisms is preferred. The main challenge
	  here is that all tools we have at our disposal today are
	  node-centric, end-to-end oriented, or assuming a
	  packet-stream communication environment. Rethinking
	  reachability and operational availability, for example, can
	  yield significant insights into how information-centric
	  networks will be managed in the future.
	</t>
	<t>
	  With respect to network management we see two different
	  aspects. First, any operator needs to manage all resources
	  available in the network, which can range from node
	  connectivity to network bandwidth availability to in-network
	  storage to multi-access support. In ICN, users will also
	  bring into the network significant resources in terms of
	  network coverage extension, storage, and processing
	  capabilities. DTN characteristics should also be considered
	  to the degree that this is possible (e.g. content
	  dissemination through data mules).  On the other hand, given
	  that nodes and links are not at the center of an
	  information-centric network, network management should
	  capitalize on native ICN mechanisms. For example, in-network
	  storage and name resolution can be used for monitoring,
	  while native publish/subscribe functionality can be used for
	  triggering notifications.
	</t>
	<t>
	  However, the considerations on leveraging intrinsic ICN
	  mechanisms and capabilities to support management operations
	  go beyond a simple mapping exercise. In fact, not only it
	  raises a series of challenges on its own, but also opens up
	  new possibilities for both ICN and "network management" as a
	  concept. For instance, naming mechanisms are central to ICN
	  intrinsic operations, which are used to identify and reach
	  content under different aspects (e.g., CCN uses a
	  hierarchical namespace able to contain human-readable naming
	  scheme, NetInf uses a flat naming structure, etc.). In this
	  way, ICN is decoupled from host-centric aspects on which
	  traditional networking management schemes rely upon. As
	  such, questions are raised which can directly be translated
	  into challenges for network management capability, such as,
	  for example how to address a node or a network segment in a
	  ICN naming paradigm, how to identify which node is connected
	  "where", and if there is a host-centric protocol running
	  from which the management process can also leverage upon.
	</t>
	<t>
	  But, on the other hand, these same inherent ICN
	  characteristics also allow us to look into network
	  management through a new perspective. By centering its
	  operations around content, one can conceive new management
	  operations addressing, for example, per-content management
	  or access control, as well as analyzing performance per
	  content name instead of per link or node. Moreover, such
	  considerations can also be used to manage operational
	  aspects of ICN mechanisms themselves. For example, <xref
	  target="NDN-MGMT"/> re-utilizes inherent content-centric
	  capabilities of CCN to manage optimal link connectivity for
	  nodes, in concert with a network optimization
	  process. Conversely, how these content-centric aspects can
	  otherwise influence and impact management in other areas
	  (e.g., security, resilience) is also important, as
	  exemplified by in <xref target="ccn-access"/>, where access
	  control mechanisms are integrated into a prototype of the
	  <xref target="PURSUIT"/> architecture.
	</t>
	<t>
	  In this way, a set of core research challenges on ICN
	  management can be derived as:
	  <list style="symbols">
	    <t>
	      Manage and control content reception at the destination
	    </t>
	    <t>
	      Coordination of management information exchange and
	      control between ICN nodes and ICN network control points
	      Identification of management and controlling actions and
	      items through information naming
	    </t>
	    <t>
	      Relationship between NDOs and host entities
	      identification (i.e., how to identify a particular link,
	      interface or flow that need to be managed)
	    </t>
	  </list>
	</t>
      </section>
    </section>
    <section title="Link to and Impact on IETF Technologies">
      <t>
	TBW later.
      </t>
    </section>
    
    <section title="Security Considerations">
      <t>
	See naming and security challenges.
      </t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->


    <references title="Informative References">

      &I-D.ni-core;

<!--
      &I-D.ni-params;
-->


      <reference anchor="NDN-MGMT">
	<front>
	  <title>A named data networking flexible framework for
	  management communications</title>
	  <author initials="D." surname="Corujo"/>
	  <author initials="R.L." surname="Aguiar"/>
	  <author initials="I." surname="Vidal"/>
	  <author initials="J." surname="Garcia-Reinoso"/>
	  <date month="December" year="2012"/>
	</front>
	<seriesInfo name="Communications Magazine, IEEE , vol.50, no.12, pp.36-43" value=""/>
      </reference>

      <reference anchor="ccn-access">
	<front>
	  <title>Access control enforcement delegation for information-centric networking architectures</title>
	  <author initials="N." surname="Fotiou"/>
	  <author initials="G.F." surname="Marias"/>
	  <author initials="G.C." surname="Polyzos"/>
	  <date year="2012"/>
	</front>
	<seriesInfo name="In" value="Proceedings of the second edition of the ICN workshop on Information-centric networking (ICN '12). ACM, New York, NY, USA, 85-90."/>
      </reference>

      <reference anchor="PURSUIT">
	<front>
	  <title>Developing Information Networking Further: From PSIRP to PURSUIT</title>
	  <author initials="N." surname="Fotiou et al."/>
	  <date year="2010"/>
	</front>
	<seriesInfo name="In" value="Proceedings of Proc. BROADNETS.  ICST"/>
      </reference>

      &RFC5944;
      
      <reference anchor="CCN">
        <front>
          <title>Networking Named Content</title>

          <author fullname="Van Jacobsen" surname="Jacobsen"></author>

          <author fullname="Diana K. Smetters" surname="K"></author>

          <author fullname="James D. Thornton" surname="D"></author>

          <author fullname="Michael F. Plass" surname="F"></author>

          <author fullname="Nicholas H. Briggs" surname="H"></author>

          <author fullname="Rebecca L. Braynard" surname="L"></author>

          <date month="December" year="2009" />
        </front>

        <seriesInfo name="CoNEXT 2009" value="" />
      </reference>


      <reference anchor="DONA">
        <front>
          <title>A Data-Oriented (and Beyond) Network Architecture</title>

          <author initials="T." surname="Koponen"></author>
          <author initials="A." surname="Ermolinskiy"></author>
          <author initials="M." surname="Chawla"></author>
          <author initials="K.H." surname="Kim"></author>
          <author initials="B." surname="gon Chun"></author>
          <author initials="S." surname="Shenker"></author>

          <date month="August" year="2007" />
        </front>

        <seriesInfo name="In" value="Proceedings of SIGCOMM 2007" />
      </reference>


      <reference anchor="BREADCRUMBS">
        <front>
          <title>Breadcrumbs: Efficient, Best-Effort Content Location
          in Cache Networks</title>

          <author initials="E.J." surname="Rosensweig"></author>
          <author initials="J." surname="Kurose"></author>

          <date month="April" year="2009" />
        </front>

        <seriesInfo name="In" value="Proceedings of the IEEE INFOCOM 2009" />
      </reference>


      <reference anchor="COMPACT">
        <front>
          <title>Compact routing with minimum stretch</title>

          <author initials="L." surname="Cowen"></author>

          <date year="2001" />
        </front>

        <seriesInfo name="In" value="Journal of Algorithms, vol. 38, pp. 170--183" />
      </reference>


      <reference anchor="RANDOM">
        <front>
          <title>Random walks in peer-to-peer networks: algorithms and evaluation</title>

          <author initials="C." surname="Gkantsidis"></author>
          <author initials="M." surname="Mihail"></author>
          <author initials="A." surname="Saberi"></author>

          <date year="2006" />
        </front>

        <seriesInfo name="In" value="Perform. Eval., vol. 63, pp. 241--263" />
      </reference>


      <reference anchor="GREEDY">
        <front>
          <title>Greedy forwarding in dynamic scale-free networks embedded in hyperbolic metric spaces</title>

          <author initials="F." surname="Papadopoulos"></author>
          <author initials="D." surname="Krioukov"></author>
          <author initials="M." surname="Boguna"></author>
          <author initials="A." surname="Vahdat"></author>

          <date year="2010" />
        </front>

        <seriesInfo name="In" value="Proceedings of the IEEE INFOCOM, San Diego, USA" />
      </reference>


      <reference anchor="ICNNAMING">
        <front>
          <title>Naming in Content-Oriented Architectures</title>

          <author initials="A." surname="Ghodsi"></author>
          <author initials="T." surname="Koponen"></author>
          <author initials="J." surname="Rajahalme"></author>
          <author initials="P." surname="Sarolahti"></author>
          <author initials="S." surname="Shenker"></author>

          <date year="2011" />
        </front>

        <seriesInfo name="In" value="Proceedings ACM SIGCOMM Workshop on Information-Centric Networking (ICN)" />
      </reference>


      <reference anchor="ICNSURVEY">
        <front>
          <title>A Survey of Information-Centric Networking</title>

          <author initials="B." surname="Ahlgren"></author>
          <author initials="C." surname="Dannewitz"></author>
          <author initials="C." surname="Imbrenda"></author>
          <author initials="D." surname="Kutscher"></author>
          <author initials="B." surname="Ohlman"></author>

          <date year="2012" />
        </front>

        <seriesInfo name="In" value="Communications Magazine, IEEE , vol.50, no.7, pp.26-36" />
	<seriesInfo name="DOI" value="10.1109/MCOM.2012.6231276"/>
      </reference>


      <reference anchor="HRICP">
        <front>
          <title>Joint hop-by-hop and receiver-driven interest control
          protocol for content-centric networks</title>

          <author initials="G." surname="Carofiglio"></author>
          <author initials="M." surname="Gallo"></author>
          <author initials="L." surname="Muscariello"></author>

          <date year="2012" />
        </front>

        <seriesInfo name="In" value="Proceedings of ACM SIGCOMM ICN 2012" />
	<seriesInfo name="DOI" value="10.1145/2342488.2342497"/>
      </reference>
    </references>
  </back>
</rfc>
